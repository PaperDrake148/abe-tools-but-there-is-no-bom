name: Rust Monorepo CI (Windows)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'tools/**'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[SKIP CI]')"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Determine changed tools
      id: changed-tools
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
        else
          BASE_SHA=$(git rev-parse HEAD^)
          HEAD_SHA=$(git rev-parse HEAD)
        fi
        CHANGED_TOOLS=$(git diff --name-only $BASE_SHA $HEAD_SHA | grep '^tools/' | cut -d'/' -f2 | sort -u)
        echo "Changed tools: $CHANGED_TOOLS"
        echo "changed_tools=$CHANGED_TOOLS" >> $GITHUB_OUTPUT

    - name: Build changed tools
      if: steps.changed-tools.outputs.changed_tools
      shell: bash
      run: |
        for tool in ${{ steps.changed-tools.outputs.changed_tools }}; do
          echo "Building tool: $tool"
          cargo build --release --package $tool
        done

    # - name: Run tests for changed tools
    #   if: steps.changed-tools.outputs.changed_tools
    #   shell: bash
    #   run: |
    #     for tool in ${{ steps.changed-tools.outputs.changed_tools }}; do
    #       echo "Testing tool: $tool"
    #       cargo test --package $tool
    #     done

    - name: Upload artifacts for changed tools
      if: steps.changed-tools.outputs.changed_tools
      uses: actions/upload-artifact@v3
      with:
        name: windows-tools
        path: |
          target/release/*.exe
        if-no-files-found: error
